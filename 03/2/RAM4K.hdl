// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM4K.hdl

/**
 * Memory of 4K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM4K[address(t)](t)
 *     Write: If load(t-1) then RAM4K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM4K {

    IN  in[16], load, address[12];
    OUT out[16];

    PARTS:
	DMux8Way(in=load,sel=address[9..11],a=loadr1,b=loadr2,c=loadr3,d=loadr4,e=loadr5,f=loadr6,g=loadr7,h=loadr8);
	
	RAM512(in=in,load=loadr1,address=address[0..8],out=r1);
	RAM512(in=in,load=loadr2,address=address[0..8],out=r2);
	RAM512(in=in,load=loadr3,address=address[0..8],out=r3);
	RAM512(in=in,load=loadr4,address=address[0..8],out=r4);
	RAM512(in=in,load=loadr5,address=address[0..8],out=r5);
	RAM512(in=in,load=loadr6,address=address[0..8],out=r6);
	RAM512(in=in,load=loadr7,address=address[0..8],out=r7);
	RAM512(in=in,load=loadr8,address=address[0..8],out=r8);

	Mux8Way16(a=r1,b=r2,c=r3,d=r4,e=r5,f=r6,g=r7,h=r8,sel=address[9..11],out=out);
}
